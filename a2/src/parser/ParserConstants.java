/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 1;
  /** RegularExpression Id. */
  int EXTENDS = 2;
  /** RegularExpression Id. */
  int WHILE = 3;
  /** RegularExpression Id. */
  int IF = 4;
  /** RegularExpression Id. */
  int ELSE = 5;
  /** RegularExpression Id. */
  int FOR = 6;
  /** RegularExpression Id. */
  int NEW = 7;
  /** RegularExpression Id. */
  int RETURN = 8;
  /** RegularExpression Id. */
  int LTE = 9;
  /** RegularExpression Id. */
  int GTE = 10;
  /** RegularExpression Id. */
  int EQUAL = 11;
  /** RegularExpression Id. */
  int NOT_EQUAL = 12;
  /** RegularExpression Id. */
  int LPAREN = 13;
  /** RegularExpression Id. */
  int RPAREN = 14;
  /** RegularExpression Id. */
  int LBRACKET = 15;
  /** RegularExpression Id. */
  int RBRACKET = 16;
  /** RegularExpression Id. */
  int LBRACE = 17;
  /** RegularExpression Id. */
  int RBRACE = 18;
  /** RegularExpression Id. */
  int ASSIGN = 19;
  /** RegularExpression Id. */
  int PLUS = 20;
  /** RegularExpression Id. */
  int INCREMENT = 21;
  /** RegularExpression Id. */
  int SUB = 22;
  /** RegularExpression Id. */
  int DECREMENT = 23;
  /** RegularExpression Id. */
  int DIV = 24;
  /** RegularExpression Id. */
  int MULTICOMMENT = 25;
  /** RegularExpression Id. */
  int TIMES = 26;
  /** RegularExpression Id. */
  int LT = 27;
  /** RegularExpression Id. */
  int GT = 28;
  /** RegularExpression Id. */
  int NOT = 29;
  /** RegularExpression Id. */
  int MOD = 30;
  /** RegularExpression Id. */
  int UNSUPPORTED = 31;
  /** RegularExpression Id. */
  int SEMICOLON = 32;
  /** RegularExpression Id. */
  int PERIOD = 33;
  /** RegularExpression Id. */
  int COMMA = 34;
  /** RegularExpression Id. */
  int OR = 35;
  /** RegularExpression Id. */
  int AND = 36;
  /** RegularExpression Id. */
  int SINGLE_QUOTE = 37;
  /** RegularExpression Id. */
  int BREAK = 38;
  /** RegularExpression Id. */
  int INSTANCEOF = 39;
  /** RegularExpression Id. */
  int SWITCH = 40;
  /** RegularExpression Id. */
  int INT_CONST = 41;
  /** RegularExpression Id. */
  int BOOLEAN_CONST = 42;
  /** RegularExpression Id. */
  int STRING_CONST = 43;
  /** RegularExpression Id. */
  int ID = 44;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"class\"",
    "\"extends\"",
    "\"while\"",
    "\"if\"",
    "\"else\"",
    "\"for\"",
    "\"new\"",
    "\"return\"",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"=\"",
    "\"+\"",
    "\"++\"",
    "\"-\"",
    "\"--\"",
    "\"/\"",
    "\"/*\"",
    "\"*\"",
    "\"<\"",
    "\">\"",
    "\"!\"",
    "\"%\"",
    "<UNSUPPORTED>",
    "\";\"",
    "\".\"",
    "\",\"",
    "\"||\"",
    "\"&&\"",
    "\"\\\"\"",
    "\"break\"",
    "\"instanceof\"",
    "\"switch\"",
    "<INT_CONST>",
    "<BOOLEAN_CONST>",
    "<STRING_CONST>",
    "<ID>",
    "<token of kind 45>",
    "<token of kind 46>",
    "<token of kind 47>",
  };

}
